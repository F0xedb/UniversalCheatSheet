[
  {
    "name": "UE4 Default Actor",
    "info": "A default actor",
    "content": "#include \"GameFramework/Actor.h\"\n#include \"MyActor.generated.h\"\n\n\n// Actor.h\n/* Unreal Engine classes always start with a UCLASS preprocessor definition*/\nUCLASS()\nclass AMyActor : public AActor\n{\n    GENERATED_BODY()\n\npublic:\n    // Sets default values for this actor's properties\n    AMyActor();\n\n    // Called every frame\n    virtual void Tick( float DeltaSeconds ) override;\n\n    /* Set property tobe used anywere including inside the engine*/\n    UPROPERTY(EditAnywhere)\n    int32 TotalDamage;\n\nprotected:\n    // Called when the game starts or when spawned\n    virtual void BeginPlay() override;\n};\n\n//Actor.cpp\n\nAMyActor::AMyActor()\n\n{\n\n    // Set this actor to call Tick() every frame.  You can turn this off to improve performance if you do not need it.\n\n    PrimaryActorTick.bCanEverTick = true;\n\n}"
  },
  {
    "name": "UPROPERTY",
    "info": "A function declaration to be used from within the editor",
    "content":  "/* Default declaration of a Uproperty*/\n\n UPROPERTY([specifier, specifier, ...], [meta=(key=value, key=value, ...)])\n Type VariableName;\n\n //specifiers you can use as a UPROPERTY\n\n /*\n Config //Property should be loaded/saved to ini file as permanent profile.\n\nGlobalConfig //Same as above but load config from base class, not subclass.\n\nLocalized //Property should be loaded as localizable text. Implies ReadOnly.\n\nTransient //Property is transient: shouldn't be saved, zero-filled at load time. Opposite of the SaveGame specifier.\n\nDuplicateTransient //Property should always be reset to the default value during any type of duplication (copy/paste, binary duplication, etc.)\n\nNonPIETransient //Property should always be reset to the default value during any type of duplication (copy/paste, binary duplication, etc.)\n\nExport //Object property can be exported with it's owner.\n\nEditInline //Edit this object reference inline in the editor.\n\nNoClear //Hide clear (and browse) button in the editor.\n\nEditFixedSize //Indicates that elements of an array can be modified in Editor, but its size cannot be changed.\n\n//Note Static arrays of containers, such as TArray, are not allowed. Use dynamic arrays.\n\n//Note May not work properly with container arrays of Structs.\n\nReplicated //Property is relevant to network replication.\n\nReplicatedUsing //Property will be configured for replication. The provided function is called only when the replicated property is received via replication.\n\n\nRepRetry //Retry replication of this property if it fails to be fully sent (e.g. object references not yet available to serialize over the network)\n\nNotReplicated //Skip replication (only for struct members and parameters in service request functions).\n\nInterp //Interpolatable property for use with matinee. Always user-settable in the editor.\n\nNonTransactional //Changes to this variable value will not be included in the editor's undo/redo history.\n\nInstanced //Property is a component reference. Implies EditInline and Export.\n\nBlueprintAssignable //MC Delegates only. Property should be exposed for assigning in blueprints.\n\nCategory //Specifies the category of the property within the Editor. Supports sub-categories separated by \"|\".\n\n// Example    UPROPERTY(Category = \"Gun\")\n\n\nAdvancedDisplay //Moves the property into the Advanced dropdown in the Details panel within the Editor.\n\n\nEditAnywhere //Indicates that this property can be edited via property windows, archetypes and instances within the Editor.\n\nEditInstanceOnly //Indicates that this property can be edited by property windows, but only on instances, not on archetypes\n\nEditDefaultsOnly //Indicates that this property can be edited by property windows, but only on archetypes. This operator is incompatible with the Visible* specifiers.\n\nVisibleAnywhere //Indicates that this property is visible in property windows, but cannot be edited at all\n\nVisibleInstanceOnly //Indicates that this property is only visible in property windows for instances, not for archetypes, and cannot be edited\n\nVisibleDefaultsOnly //Indicates that this property is only visible in property windows for archetypes, and cannot be edited\n\nBlueprintReadOnly //This property can be read by blueprints, but not modified.\n\nBlueprintReadWrite //This property can be read or written from a blueprint.\n\nAssetRegistrySearchable //The AssetRegistrySearchable keyword indicates that this property and it's value will be automatically added to the asset registry for any asset class instances containing this as a member variable. It is not legal to use on struct properties or parameters.\n\nSaveGame //Property should be serialized for save game. Opposite of the Transient specifier.\n\nBlueprintCallable //Multicast Delegates only. Property should be exposed for calling in blueprint code\n\nBlueprintAuthorityOnly //MC Delegates only. This delegate accepts (only in blueprint) only events with BlueprintAuthorityOnly.\n\nTextExportTransient //Property shouldn't be exported to text format (e.g. copy/paste)\n */"
  },
  {
    "name": "UFUNCTION",
    "info": "A function declaration to be used from within the editor",
    "content": "/* Default declaration of a UFUNCTION*/\n\nUFUNCTION([specifier, specifier, ...], [meta(key=value, key=value, ...)])\nReturnType FunctionName([Parameter, Parameter, ...])\n\n//specifiers you can use as a UFUNCTION\n\nBlueprintAuthorityOnly //This function will only execute from Blueprint code if running on a machine with network authority (a server, dedicated server, or single-player game).\n\nBlueprintCallable //The function can be executed in a Blueprint or Level Blueprint graph.\n\nBlueprintCosmetic //This function is cosmetic and will not run on dedicated servers.\n\nBlueprintGetter //This function will be used as the accessor for a Blueprint-exposed property. This specifier implies BlueprintPure and BlueprintCallable.\n\nBlueprintImplementableEvent //The function can be implemented in a Blueprint or Level Blueprint graph.\n\nBlueprintInternalUseOnly //Indicates that the function should not be exposed to the end user.\n\nBlueprintNativeEvent //This function is designed to be overridden by a Blueprint, but also has a default native implementation. Declares an additional function named the same as the main function, but with _Implementation added to the end, which is where code should be written. The autogenerated code will call the \"_Implementation\" method if no Blueprint override is found.\n\nBlueprintPure //The function does not affect the owning object in any way and can be executed in a Blueprint or Level Blueprint graph.\n\nBlueprintSetter //This function will be used as the mutator for a Blueprint-exposed property. This specifier implies BlueprintCallable.\n\nCallInEditor //This function can be called in the editor on selected instances via a button in the details panel.\n\nCategory = TopCategory|SubCategory|Etc //Specifies the category of the function when displayed in Blueprint editing tools. Define nested categories using the | operator.\n\nClient //The function is only executed on the client that owns the Object on which the function is called. Declares an additional function named the same as the main function, but with _Implementation added to the end. The autogenerated code will call the \"_Implementation\" method when necessary.\n\nCustomThunk //the UnrealHeaderTool code generator will not produce a thunk for this function; it is up to the user to provide one.\n\nExec //The function can be executed from the in-game console. Exec commands only function when declared within certain classes.\n\nNetMulticast //The function is both executed locally on the server and replicated to all clients, regardless of the Actor's NetOwner.\n\nReliable //The function is replicated over the network, and is guaranteed to arrive regardless of bandwidth or network errors. Only valid when used in conjunction with Client or Server.\n\nSealedEvent //This function cannot be overridden in subclasses. The SealedEvent keyword can only be used for events. For non-event functions, declare them as static or final to seal them.\n\nServiceRequest //This function is an RPC service request.\n\nServiceResponse //This function is an RPC service response.\n\nServer //The function is only executed on the server. Declares an additional function named the same as the main function, but with _Implementation added to the end, which is where code should be written. The autogenerated code will call the \"_Implementation\" method when necessary.\n\nUnreliable //The function is replicated over the network but can fail due to bandwidth limitations or network errors. Only valid when used in conjunction with Client or Server.\n\nWithValidation //Declares an additional function named the same as the main function, but with _Validation added to the end. This function takes the same parameters, and returns a bool to indicate whether or not the call to the main function should proceed."
  },
  {
    "name": "Unreal variables",
    "info": "A function declaration to be used from within the editor",
    "content": ""
  }
]

{
  "name": "Unreal variables",
  "info": "A function declaration to be used from within the editor",
  "content": ""
}